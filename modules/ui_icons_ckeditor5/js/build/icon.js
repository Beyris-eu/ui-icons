!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.CKEditor5=n():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.icon=n())}(self,(()=>(()=>{var __webpack_modules__={"./js/ckeditor5_plugins/icon/src/iconEditing.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ IconEditing)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/widget */ "ckeditor5/src/widget.js");\n/* harmony import */ var _insertIconCommand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./insertIconCommand */ "./js/ckeditor5_plugins/icon/src/insertIconCommand.js");\n/* eslint-disable import/no-extraneous-dependencies */\n\n\n\n\n\n/**\n * The Drupal Icon Editing plugin.\n *\n * Handles the transformation from the CKEditor 5 UI to Drupal-specific markup.\n *\n * @private\n */\nclass IconEditing extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  /**\n   * @inheritdoc\n   */\n  static get requires() {\n    return [ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__.Widget];\n  }\n\n  constructor(editor) {\n    super(editor);\n\n    this.attrs = {\n      drupalIconId: "data-icon-id",\n      drupalIconOptions: "data-icon-options",\n    };\n    this.converterAttributes = ["drupalIconId", "drupalIconOptions"];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  init() {\n    const options = this.editor.config.get("icon");\n    if (!options) {\n      return;\n    }\n\n    this._defineSchema();\n    this._defineConverters();\n\n    this.editor.commands.add("insertIcon", new _insertIconCommand__WEBPACK_IMPORTED_MODULE_2__["default"](this.editor));\n  }\n\n  /**\n   * Registers uiIcon as an element in the DOM converter.\n   *\n   * @private\n   */\n  _defineSchema() {\n    const schema = this.editor.model.schema;\n    schema.register("drupalIcon", {\n      // inheritAllFrom: \'$inlineObject\',\n      inheritAllFrom: "imageInline",\n      allowAttributes: Object.keys(this.attrs),\n    });\n    // Register `<drupal-icon>` as a block element in the DOM converter. This\n    // ensures that the DOM converter knows to handle the `<drupal-icon>` as a\n    // block element.\n    this.editor.editing.view.domConverter.blockElements.push("drupal-icon");\n  }\n\n  /**\n   * Defines handling of material icon element in the content.\n   *\n   * @private\n   */\n  _defineConverters() {\n    const { conversion } = this.editor;\n\n    // Upcast Converters: determine how existing HTML is interpreted by the\n    // editor. These trigger when an editor instance loads.\n    conversion.for("upcast").elementToElement({\n      model: "drupalIcon",\n      view: {\n        name: "drupal-icon",\n      },\n    });\n\n    // Data Downcast Converters: converts stored model data into HTML.\n    // These trigger when content is saved.\n    conversion.for("dataDowncast").elementToElement({\n      model: "drupalIcon",\n      view: {\n        name: "drupal-icon",\n      },\n    });\n\n    // Editing Downcast Converters. These render the content to the user for\n    // editing, i.e. this determines what gets seen in the editor. These trigger\n    // after the Data Upcast Converters, and are re-triggered any time there\n    // are changes to any of the models\' properties.\n    conversion\n      .for("editingDowncast")\n      .elementToElement({\n        model: "drupalIcon",\n        view: (modelElement, { writer }) => {\n          const container = writer.createContainerElement("span", {\n            class: "drupal-icon",\n          });\n          writer.setCustomProperty("drupalIcon", true, container);\n          return (0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__.toWidget)(container, writer, {\n            label: Drupal.t("Icon widget"),\n          });\n        },\n      })\n      .add((dispatcher) => {\n        const converter = async (event, data, conversionApi) => {\n          const viewWriter = conversionApi.writer;\n          const modelElement = data.item;\n          const container = conversionApi.mapper.toViewElement(modelElement);\n          const existingPreview = container.getChild(0);\n\n          if (existingPreview) {\n            viewWriter.remove(existingPreview);\n          }\n\n          const iconPreview = viewWriter.createRawElement("span", {\n            "data-drupal-icon-preview": "loading",\n          });\n\n          viewWriter.insert(\n            viewWriter.createPositionAt(container, 0),\n            iconPreview,\n          );\n\n          try {\n            const { preview } = await IconEditing._fetchIcon(modelElement);\n            if (!iconPreview) {\n              return;\n            }\n\n            this.editor.editing.view.change((writer) => {\n              const iconPreviewContainer = writer.createRawElement(\n                "span",\n                { "data-drupal-icon-preview": "ready" },\n                (domElement) => {\n                  domElement.innerHTML = preview;\n                },\n              );\n\n              writer.insert(\n                writer.createPositionBefore(iconPreview),\n                iconPreviewContainer,\n              );\n              writer.remove(iconPreview);\n            });\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.error("Error fetching icon preview:", error);\n          }\n        };\n\n        this.converterAttributes.forEach((attribute) => {\n          dispatcher.on(`attribute:${attribute}:drupalIcon`, converter);\n        });\n\n        return dispatcher;\n      });\n\n    // Set attributeToAttribute conversion for all supported attributes.\n    Object.keys(this.attrs).forEach((modelKey) => {\n      const attributeMapping = {\n        model: {\n          key: modelKey,\n          name: "drupalIcon",\n        },\n        view: {\n          name: "drupal-icon",\n          key: this.attrs[modelKey],\n        },\n      };\n      // Attributes should be rendered only in dataDowncast to avoid having\n      // unfiltered data-attributes on the Drupal Icon widget.\n      conversion.for("dataDowncast").attributeToAttribute(attributeMapping);\n      conversion.for("upcast").attributeToAttribute(attributeMapping);\n    });\n  }\n\n  /**\n   * Fetches preview from the server.\n   *\n   * @param {module:engine/model/element~Element} modelElement\n   *   The model element which preview should be loaded.\n   * @return {Promise<{preview: string, label: string}>}\n   *   A promise that returns an object.\n   *\n   * @private\n   */\n  static async _fetchIcon(modelElement) {\n    let options = modelElement.getAttribute("drupalIconOptions");\n    if (typeof options === "undefined") {\n      options = "";\n    }\n    const query = {\n      icon_id: modelElement.getAttribute("drupalIconId"),\n      options,\n    };\n\n    const response = await fetch(\n      `${Drupal.url("ui-icons/icon/preview")}?${new URLSearchParams(query)}`,\n    );\n\n    if (response.ok) {\n      const preview = await response.text();\n      return { preview };\n    }\n\n    // @todo from filter settings if set?\n    const title = `The referenced icon: "${modelElement.getAttribute("drupalIconId")}" is missing and needs to be re-embedded.`;\n    const error = `<span class="drupal-icon"><svg width="15" height="14" fill="none" xmlns="http://www.w3.org/2000/svg"><title>${title}</title><path d="M7.002 0a7 7 0 100 14 7 7 0 000-14zm3 5c0 .551-.16 1.085-.477 1.586l-.158.22c-.07.093-.189.241-.361.393a9.67 9.67 0 01-.545.447l-.203.189-.141.129-.096.17L8 8.369v.63H5.999v-.704c.026-.396.078-.73.204-.999a2.83 2.83 0 01.439-.688l.225-.21-.01-.015.176-.14.137-.128c.186-.139.357-.277.516-.417l.148-.18A.948.948 0 008.002 5 1.001 1.001 0 006 5H4a3 3 0 016.002 0zm-1.75 6.619a.627.627 0 01-.625.625h-1.25a.627.627 0 01-.626-.625v-1.238c0-.344.281-.625.626-.625h1.25c.344 0 .625.281.625.625v1.238z" fill="#d72222"/></svg></span>`;\n    return { preview: error };\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.icon/./js/ckeditor5_plugins/icon/src/iconEditing.js?')},"./js/ckeditor5_plugins/icon/src/iconUi.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ IconUi)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ "ckeditor5/src/ui.js");\n/* harmony import */ var _icons_icon_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../icons/icon.svg */ "./icons/icon.svg");\n/* eslint-disable import/no-extraneous-dependencies */\n\n\n\n\n\n/**\n * Provides the toolbar button to insert an icon element.\n *\n * @private\n */\nclass IconUi extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  init() {\n    const editor = this.editor;\n    const options = this.editor.config.get("icon");\n    if (!options) {\n      return;\n    }\n\n    this.dialogURL = options.dialogURL;\n\n    const { openDialog, dialogSettings = {} } = options;\n    if (typeof openDialog !== "function") {\n      return;\n    }\n\n    // This will register the icon toolbar button.\n    editor.ui.componentFactory.add("icon", (locale) => {\n      const command = editor.commands.get("insertIcon");\n      const buttonView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\n\n      // Create the toolbar button.\n      buttonView.set({\n        label: Drupal.t("Insert Icon"),\n        icon: _icons_icon_svg__WEBPACK_IMPORTED_MODULE_2__["default"],\n        tooltip: true,\n      });\n\n      // Bind the state of the button to the command.\n      buttonView.bind("isOn", "isEnabled").to(command, "value", "isEnabled");\n      this.listenTo(buttonView, "execute", () => {\n        openDialog(\n          this.dialogURL,\n          ({ settings }) => {\n            editor.execute("insertIcon", settings);\n          },\n          dialogSettings,\n        );\n      });\n\n      return buttonView;\n    });\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.icon/./js/ckeditor5_plugins/icon/src/iconUi.js?')},"./js/ckeditor5_plugins/icon/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _iconUi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iconUi */ "./js/ckeditor5_plugins/icon/src/iconUi.js");\n/* harmony import */ var _iconEditing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iconEditing */ "./js/ckeditor5_plugins/icon/src/iconEditing.js");\n/* eslint-disable import/no-extraneous-dependencies */\n\n\n\n\nclass Icon extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  /**\n   * @inheritdoc\n   */\n  static get requires() {\n    return [_iconUi__WEBPACK_IMPORTED_MODULE_1__["default"], _iconEditing__WEBPACK_IMPORTED_MODULE_2__["default"]];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  static get pluginName() {\n    return "Icon";\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Icon,\n});\n\n\n//# sourceURL=webpack://CKEditor5.icon/./js/ckeditor5_plugins/icon/src/index.js?')},"./js/ckeditor5_plugins/icon/src/insertIconCommand.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InsertIconCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/**\n * @file defines insertIconsCommand, which is executed when the icon\n * toolbar button is pressed.\n */\n/* eslint-disable import/no-extraneous-dependencies */\n\n\nfunction createDrupalIcon(writer, attributes) {\n  const drupalIcon = writer.createElement(\"drupalIcon\", attributes);\n  return drupalIcon;\n}\n\n/**\n * The insert icon command.\n *\n * The command is registered by the `IconEditing` plugin as\n * `InsertIconCommand`.\n *\n * In order to insert icon at the current selection position, execute the\n * command and pass the attributes desired in the drupal-icon element:\n *\n * @example\n *    editor.execute('InsertIconCommand', {\n *      'data-icon-id': 'iconset_id:icon_id',\n *      'data-option-{option_name}': '{option_value}',\n *    });\n *\n * @private\n */\nclass InsertIconCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\n  execute(settings) {\n    if (!settings.icon) {\n      return;\n    }\n    const modelAttributes = {\n      drupalIconId: settings.icon,\n      drupalIconOptions: JSON.stringify(settings.icon_settings),\n    };\n\n    this.editor.model.change((writer) => {\n      this.editor.model.insertObject(createDrupalIcon(writer, modelAttributes));\n    });\n  }\n\n  refresh() {\n    const model = this.editor.model;\n    const selection = model.document.selection;\n    const allowedIn = model.schema.findAllowedParent(\n      selection.getFirstPosition(),\n      \"drupalIcon\",\n    );\n    this.isEnabled = allowedIn !== null;\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.icon/./js/ckeditor5_plugins/icon/src/insertIconCommand.js?")},"./icons/icon.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" standalone=\\"no\\"?>\\n<svg\\n   viewBox=\\"0 0 20 20\\"\\n   version=\\"1.1\\"\\n   id=\\"svg1\\"\\n   sodipodi:docname=\\"icon.svg\\"\\n   inkscape:version=\\"1.3.2 (091e20ef0f, 2023-11-25)\\"\\n   xmlns:inkscape=\\"http://www.inkscape.org/namespaces/inkscape\\"\\n   xmlns:sodipodi=\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\"\\n   xmlns=\\"http://www.w3.org/2000/svg\\"\\n   xmlns:svg=\\"http://www.w3.org/2000/svg\\">\\n  <defs\\n     id=\\"defs1\\" />\\n  <sodipodi:namedview\\n     id=\\"namedview1\\"\\n     pagecolor=\\"#ffffff\\"\\n     bordercolor=\\"#000000\\"\\n     borderopacity=\\"0.25\\"\\n     inkscape:showpageshadow=\\"2\\"\\n     inkscape:pageopacity=\\"0.0\\"\\n     inkscape:pagecheckerboard=\\"0\\"\\n     inkscape:deskcolor=\\"#d1d1d1\\"\\n     inkscape:zoom=\\"10.631582\\"\\n     inkscape:cx=\\"-17.589104\\"\\n     inkscape:cy=\\"13.356432\\"\\n     inkscape:window-width=\\"1920\\"\\n     inkscape:window-height=\\"1012\\"\\n     inkscape:window-x=\\"0\\"\\n     inkscape:window-y=\\"0\\"\\n     inkscape:window-maximized=\\"1\\"\\n     inkscape:current-layer=\\"svg1\\" />\\n  <path\\n     id=\\"path1\\"\\n     d=\\"m 2.8007812,3.0292969 c -0.6099951,0 -1.1015624,0.4707854 -1.1015624,1.0507812 v 3.0509806 c 0.7594661,7.88e-5 0.6098625,-0.1875593 1.5,-0.1876963 V 4.5 h 4.5625 C 7.7694287,3.8270555 7.7108944,3.7132665 7.7089844,3.0292969 Z m 9.9199218,0 C 12.724803,3.5346514 12.510559,3.6774178 12.505859,4.5 h 4.263672 V 14.619141 L 14.25,11.650391 c -0.245295,-0.226882 -0.623846,-0.226882 -0.869141,0 L 11.150391,13.710938 7.7890625,10.570312 C 7.5490639,10.330319 7.1701548,10.309069 6.9101562,10.539062 l -3.7109374,4.080079 v -3.38086 c -0.7899957,0.01155 -0.6633571,0.542542 -1.5,0.551312 v 4.130329 c 0,0.589993 0.4898479,1.060547 1.0898437,1.060547 H 17.179688 c 0.599993,0 1.089843,-0.470554 1.089843,-1.060547 V 4.0800781 c 0,-0.5799958 -0.48985,-1.0507812 -1.089843,-1.0507812 z\\"\\n     sodipodi:nodetypes=\\"sscccccsccccccccccccssssssc\\" />\\n  <path\\n     d=\\"M 10.008435,0.75694563 C 8.4005881,0.77794673 7.1120535,2.0758777 7.125044,3.6613611 L 7.1252566,3.864942 C 7.1243433,4.0317771 7.1915706,4.1919553 7.3117856,4.3093599 7.431237,4.427388 7.5928497,4.49454 7.761944,4.496398 8.1282485,4.474667 8.411255,4.17071 8.401981,3.8089827 8.393691,2.8547638 9.1963606,2.0875961 10.163365,2.1255013 c 0.977804,0.032954 1.753957,0.8227684 1.756556,1.7874828 0.0061,0.1683046 0.0826,0.3266226 0.211111,0.437569 0.127232,0.1105673 0.29438,0.1657463 0.463483,0.1530131 0.338454,-0.00394 0.608979,-0.2787775 0.60284,-0.6124758 l -1.3e-4,-0.047102 c -0.0048,-1.7256632 -1.439718,-3.11424657 -3.1896,-3.08651097 z\\"\\n     id=\\"path2-7-5-3\\"\\n     sodipodi:nodetypes=\\"cccccccccccscc\\"\\n     style=\\"stroke-width:0.966267\\" />\\n  <path\\n     d=\\"M 5.5328819,9.3164894 C 5.5108434,7.7450394 4.1824182,6.4861097 2.5602287,6.4993497 L 2.3519341,6.4996273 C 2.1812357,6.4987919 2.0173718,6.5645523 1.89729,6.6820875 1.77657,6.7988761 1.7079186,6.9568545 1.7060755,7.1221228 1.7284345,7.4801302 2.0395271,7.756628 2.4096267,7.7474398 3.385937,7.7390098 4.171143,8.5232518 4.1326916,9.4683826 4.0993096,10.42407 3.291474,11.182929 2.3044233,11.185799 c -0.1721995,0.0061 -0.334157,0.08085 -0.4476282,0.206483 -0.1130838,0.124391 -0.1694832,0.287776 -0.1563971,0.453047 0.00415,0.330794 0.285441,0.595102 0.6268638,0.588988 l 0.048193,-1.43e-4 C 4.1410723,12.428874 5.561315,11.02597 5.5323374,9.315698 Z\\"\\n     id=\\"path2-7-5\\"\\n     sodipodi:nodetypes=\\"cccccccccccscc\\"\\n     style=\\"stroke-width:0.966267\\" />\\n  <path\\n     d=\\"m 13.535164,5.0483665 c 0.06043,-0.1729268 0.306939,-0.1729268 0.367369,0 l 0.345918,1.0295533 c 0.154188,0.4602397 0.517536,0.8207164 0.981442,0.9736863 l 1.037753,0.3431841 c 0.174305,0.059951 0.174305,0.304514 0,0.3644671 l -1.037753,0.3431842 c -0.463077,0.1537128 -0.826504,0.5142678 -0.981442,0.9736861 l -0.345918,1.0295534 c -0.06043,0.172928 -0.306938,0.172928 -0.367369,0 L 13.189245,9.0761276 C 13.034308,8.6167093 12.670881,8.2561551 12.207804,8.1024415 L 11.171391,7.7592573 c -0.174303,-0.059951 -0.174303,-0.3045139 0,-0.3644671 l 1.037754,-0.3431841 c 0.463906,-0.1529699 0.827253,-0.5134466 0.981441,-0.9736863 z\\"\\n     id=\\"path1-6\\"\\n     style=\\"stroke-width:1.33546\\" />\\n</svg>\\n");\n\n//# sourceURL=webpack://CKEditor5.icon/./icons/icon.svg?')},"ckeditor5/src/core.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.icon/delegated_./core.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/ui.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/ui.js");\n\n//# sourceURL=webpack://CKEditor5.icon/delegated_./ui.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/widget.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/widget.js");\n\n//# sourceURL=webpack://CKEditor5.icon/delegated_./widget.js_from_dll-reference_CKEditor5.dll?')},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./js/ckeditor5_plugins/icon/src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()));